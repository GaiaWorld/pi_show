
[package]
name = "gui"
version = "0.1.0"
authors = ["wzjsun <530739162@qq.com>"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "0.1.2"
wasm-bindgen = "0.2.30"
js-sys = "0.3.7"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

wcs = { path = "../../pi_lib/wcs" }
wcs_macro = { path = "../../pi_lib/wcs_macro" }
enum_default_macro = { path = "../../pi_lib/enum_default_macro" }
cg = { path = "../../pi_math/cg" }
deque = {path="../../pi_lib/deque"}
slab = {path="../../pi_lib/slab"}
heap = {path="../../pi_lib/heap"}
num-traits = "0.2.6"
fnv = "1.0.6"

# lazy_static = "*"

[dependencies.web-sys]
version = "0.3.10"
features = [
  'Document',
  'Element',
  'HtmlCanvasElement',
  'HtmlImageElement',
  'WebGlBuffer',
  'WebGlRenderingContext',
  'WebGlUniformLocation',
  'WebGlTexture',
  'WebGlProgram',
  'WebGlShader',
  'Window',
  'console',
]

[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
